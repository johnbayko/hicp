<project name="viewer_project" default="dist" basedir=".">
  <description>
    Holistic Interface Control Protocol Viewer.
  </description>
  <!-- set global properties for this build -->
  <property name="src" location="src"/>
  <property name="resource" location="resource"/>
  <property name="build" location="build"/>
  <property name="dist"  location="dist"/>
  <property name="package.work"  location="package.work"/>
  <property name="package"  location="package"/>

  <condition property="is.macos">
      <os family="mac"/>
  </condition>
  <condition property="is.windows">
      <os family="windows"/>
  </condition>
  <condition property="is.linux">
      <and>
          <!-- A more precise test would be nice, Linux packages don't work on BSD -->
          <os family="unix"/>
          <not>
              <os family="mac"/>
          </not>
      </and>
  </condition>

  <target name="init">
    <!-- Create the time stamp -->
    <tstamp/>
    <!-- Create the build directory structure used by compile -->
    <mkdir dir="${build}"/>
  </target>

  <target name="compile" depends="init" description="compile the source ">
    <!-- Compile the java code from ${src} into ${build} -->
    <javac deprecation="on" srcdir="${src}" destdir="${build}" debug="true" debuglevel="lines,vars,source" includeAntRuntime="false">
        <!--compilerarg value="-Xlint:unchecked"/-->
    </javac>
  </target>

  <target name="dist" depends="compile" description="generate the distribution" >
    <!-- Create the distribution directory -->
    <mkdir dir="${dist}"/>

    <!-- Put everything in ${build} into the MyProject-${DSTAMP}.jar file -->
    <jar jarfile="${dist}/HV.jar" basedir="${build}">
        <manifest>
            <attribute name="Main-Class" value="hv.HV" />
        </manifest>
    </jar>
  </target>

  <target name="prepare.macos" if="is.macos" description="Do MacOS preparation for making package" >
    <exec executable="echo">
      <arg value="prepare.macos"/>
    </exec>
    <!-- Create the package working directory -->
    <mkdir dir="${package.work}"/>

    <!-- Need to make .icns from .png icon file -->
    <property name="resource.work" location="${package.work}/resource"/>
    <mkdir dir="${resource.work}"/>

    <!-- First, make multiple scale versions of the .png icon in iconset dir -->
    <!-- Note existing icon is 512x512 -->
    <property name="icnsrc" location="${resource}/HICPviewer.png"/>
    <property name="icndir" location="${resource.work}/HICPviewer.iconset"/>
    <property name="icnloc" location="${resource.work}/HICPviewer.icns"/>
    <mkdir dir="${icndir}"/>
    <exec executable="sips">
      <arg line="-z 16 16"/>
      <arg value="${icnsrc}"/>
      <arg line="--out ${icndir}/icon_16x16.png"/>
    </exec>
    <exec executable="sips">
      <arg line="-z 32 32"/>
      <arg value="${icnsrc}"/>
      <arg line="--out ${icndir}/icon_16x16@2x.png"/>
    </exec>
    <exec executable="sips">
      <arg line="-z 32 32"/>
      <arg value="${icnsrc}"/>
      <arg line="--out ${icndir}/icon_32x32.png"/>
    </exec>
    <exec executable="sips">
      <arg line="-z 64 64"/>
      <arg value="${icnsrc}"/>
      <arg line="--out ${icndir}/icon_32x32@2x.png"/>
    </exec>
    <exec executable="sips">
      <arg line="-z 128 128"/>
      <arg value="${icnsrc}"/>
      <arg line="--out ${icndir}/icon_128x128.png"/>
    </exec>
    <exec executable="sips">
      <arg line="-z 256 256"/>
      <arg value="${icnsrc}"/>
      <arg line="--out ${icndir}/icon_128x128@2x.png"/>
    </exec>
    <exec executable="sips">
      <arg line="-z 256 256"/>
      <arg value="${icnsrc}"/>
      <arg line="--out ${icndir}/icon_256x256.png"/>
    </exec>
    <exec executable="sips">
      <arg line="-z 512 512"/>
      <arg value="${icnsrc}"/>
      <arg line="--out ${icndir}/icon_256x256@2x.png"/>
    </exec>
    <exec executable="sips">
      <arg line="-z 512 512"/>
      <arg value="${icnsrc}"/>
      <arg line="--out ${icndir}/icon_512x512.png"/>
    </exec>
    <exec executable="sips">
      <arg line="-z 1024 1024"/>
      <arg value="${icnsrc}"/>
      <arg line="--out ${icndir}/icon_512x512@2x.png"/>
    </exec>

    <!-- Convert iconset dir to .icns file -->
    <exec executable="iconutil">
      <arg line="-c icns"/>
      <arg value="${icndir}"/>
    </exec>
  </target>

  <target name="clean.macos" if="is.macos" description="Clean up MacOS preparation for making package" >
    <exec executable="echo">
      <arg line="clean prepare.macos"/>
    </exec>
    <delete dir="${package.work}"/>
  </target>

  <target name="prepare.windows" if="is.windows" description="Do Windows preparation for making package" >
    <exec executable="echo">
      <arg value="prepare.windows"/>
    </exec>
    <property name="icnloc" location="${resource}/HICPviewer.png"/>
  </target>

  <target name="clean.windows" if="is.windows" description="Clean up Windows preparation for making package" >
    <exec executable="echo">
      <arg line="clean prepare.windows"/>
    </exec>
  </target>

  <target name="prepare.linux" if="is.linux" description="Do Linux preparation for making package" >
    <exec executable="echo">
      <arg value="prepare.linux"/>
    </exec>
    <property name="icnloc" location="${resource}/HICPviewer.png"/>
  </target>

  <target name="clean.linux" if="is.linux" description="Clean up Linux preparation for making package" >
    <exec executable="echo">
      <arg line="clean prepare.linux"/>
    </exec>
  </target>

  <target name="package" depends="dist,prepare.macos,prepare.windows,prepare.linux" description="Create an installation package" >
    <!-- Create the package directory -->
    <mkdir dir="${package}"/>

    <!-- Package everything in ${dist} into the platform dependent package -->
    <exec executable="jpackage">
        <arg line="--input ${dist}/"/>
        <arg line="--dest ${package}/"/>
        <arg line="--name HV"/>
        <arg value="--description"/>
            <arg value="Holistic Interface Control Protocol Viewer."/>
        <arg line="--main-jar HV.jar"/>
        <arg line="--main-class hv.HV"/>
        <arg line="--icon ${icnloc}"/>
    </exec>
  </target>

  <target name="clean" depends="clean.macos,clean.windows,clean.linux" description="clean up" >
    <!-- Delete the ${build} and ${dist} directory trees -->
    <delete dir="${build}"/>
    <delete dir="${dist}"/>
    <delete dir="${package}"/>
  </target>
</project>
